--- origsrc/webkit-1.3.12/Source/JavaScriptCore/icu/unicode/platform.h	2011-01-05 07:05:14.000000000 -0600
+++ src/webkit-1.3.12/Source/JavaScriptCore/icu/unicode/platform.h	2011-03-06 16:50:57.861674600 -0600
@@ -210,7 +210,11 @@ typedef unsigned int uint32_t;
 /*===========================================================================*/
 
 #define U_HAVE_WCHAR_H      1
+#if defined(__CYGWIN__)
+#define U_SIZEOF_WCHAR_T    2
+#else
 #define U_SIZEOF_WCHAR_T    4
+#endif
 
 #define U_HAVE_WCSCPY       1
 
--- origsrc/webkit-1.3.12/Source/JavaScriptCore/icu/unicode/umachine.h	2011-01-05 07:05:14.000000000 -0600
+++ src/webkit-1.3.12/Source/JavaScriptCore/icu/unicode/umachine.h	2011-03-06 16:52:17.375013200 -0600
@@ -298,7 +298,7 @@ typedef int8_t UBool;
 #       if (U_SIZEOF_WCHAR_T==4)
 #           define U_WCHAR_IS_UTF32
 #       endif
-#   elif defined(WIN32) || defined(_WIN32) || defined(WIN64) || defined(_WIN64)
+#   elif defined(WIN32) || defined(_WIN32) || defined(WIN64) || defined(_WIN64) || defined(__CYGWIN__)
 #       define U_WCHAR_IS_UTF16    
 #   endif
 #endif
--- origsrc/webkit-1.3.12/Source/WebCore/icu/unicode/platform.h	2011-01-12 08:40:51.000000000 -0600
+++ src/webkit-1.3.12/Source/WebCore/icu/unicode/platform.h	2011-03-06 16:52:50.415870800 -0600
@@ -210,7 +210,11 @@ typedef unsigned int uint32_t;
 /*===========================================================================*/
 
 #define U_HAVE_WCHAR_H      1
+#if defined(__CYGWIN__)
+#define U_SIZEOF_WCHAR_T    2
+#else
 #define U_SIZEOF_WCHAR_T    4
+#endif
 
 #define U_HAVE_WCSCPY       1
 
--- origsrc/webkit-1.3.12/Source/WebCore/icu/unicode/umachine.h	2011-01-12 08:40:51.000000000 -0600
+++ src/webkit-1.3.12/Source/WebCore/icu/unicode/umachine.h	2011-03-06 16:53:16.062315600 -0600
@@ -298,7 +298,7 @@ typedef int8_t UBool;
 #       if (U_SIZEOF_WCHAR_T==4)
 #           define U_WCHAR_IS_UTF32
 #       endif
-#   elif defined(WIN32) || defined(_WIN32) || defined(WIN64) || defined(_WIN64)
+#   elif defined(WIN32) || defined(_WIN32) || defined(WIN64) || defined(_WIN64) || defined(__CYGWIN__)
 #       define U_WCHAR_IS_UTF16    
 #   endif
 #endif
--- origsrc/webkit-1.3.12/Source/WebCore/platform/gtk/PopupMenuGtk.cpp	2011-01-12 08:40:52.000000000 -0600
+++ src/webkit-1.3.12/Source/WebCore/platform/gtk/PopupMenuGtk.cpp	2011-03-06 19:58:10.274405600 -0600
@@ -171,9 +171,9 @@ bool PopupMenuGtk::typeAheadFind(GdkEven
     // menulists.
     bool repeatingCharacter = unicodeCharacter != m_previousKeyEventCharacter;
     if (event->time - m_previousKeyEventTimestamp > gSearchTimeoutMs)
-        m_currentSearchString = String(static_cast<UChar*>(utf16String.get()), charactersWritten);
+        m_currentSearchString = String(reinterpret_cast<const UChar*>(utf16String.get()), charactersWritten);
     else if (repeatingCharacter)
-        m_currentSearchString.append(String(static_cast<UChar*>(utf16String.get()), charactersWritten));
+        m_currentSearchString.append(String(reinterpret_cast<const UChar*>(utf16String.get()), charactersWritten));
 
     m_previousKeyEventTimestamp = event->time;
     m_previousKeyEventCharacter = unicodeCharacter;
--- origsrc/webkit-1.3.12/Source/WebKit/gtk/WebCoreSupport/TextCheckerClientEnchant.cpp	2011-02-22 05:11:18.000000000 -0600
+++ src/webkit-1.3.12/Source/WebKit/gtk/WebCoreSupport/TextCheckerClientEnchant.cpp	2011-03-06 19:59:31.238546800 -0600
@@ -77,7 +77,7 @@ void TextCheckerClientEnchant::checkSpel
     if (!dicts)
         return;
 
-    gchar* ctext = g_utf16_to_utf8(const_cast<gunichar2*>(text), length, 0, 0, 0);
+    gchar* ctext = g_utf16_to_utf8(reinterpret_cast<const gunichar2*>(text), length, 0, 0, 0);
     int utflen = g_utf8_strlen(ctext, -1);
 
     PangoLanguage* language(pango_language_get_default());
